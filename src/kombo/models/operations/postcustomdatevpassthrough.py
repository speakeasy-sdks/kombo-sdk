"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from ...models.shared import postcustomdatevpassthroughsuccessfulresponse as shared_postcustomdatevpassthroughsuccessfulresponse
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from kombo import utils
from typing import Optional

class FileType(str, Enum):
    STAMMDATEN = 'STAMMDATEN'
    BEWEGUNGSDATEN = 'BEWEGUNGSDATEN'

class TargetSystem(str, Enum):
    LODAS = 'LODAS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostCustomDatevPassthroughRequestBody:
    r"""POST /custom/datev/passthrough request body"""
    accounting_month: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accounting_month'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""YYYY-MM-DDTHH:mm:ss.sssZ
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
    """
    file_content: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_content') }})
    file_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_name') }})
    file_type: FileType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_type') }})
    target_system: TargetSystem = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_system') }})
    



@dataclasses.dataclass
class PostCustomDatevPassthroughRequest:
    x_integration_id: str = dataclasses.field(metadata={'header': { 'field_name': 'X-Integration-Id', 'style': 'simple', 'explode': False }})
    r"""ID of the integration you want to interact with."""
    request_body: Optional[PostCustomDatevPassthroughRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""POST /custom/datev/passthrough request body"""
    



@dataclasses.dataclass
class PostCustomDatevPassthroughResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    post_custom_datev_passthrough_successful_response: Optional[shared_postcustomdatevpassthroughsuccessfulresponse.PostCustomDatevPassthroughSuccessfulResponse] = dataclasses.field(default=None)
    r"""POST /custom/datev/passthrough Successful response"""
    

