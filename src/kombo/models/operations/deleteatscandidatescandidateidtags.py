"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import deleteatscandidatescandidateidtagssuccessfulresponse as shared_deleteatscandidatescandidateidtagssuccessfulresponse
from dataclasses_json import Undefined, dataclass_json
from kombo import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostHeaders:
    r"""Headers we will pass with `POST` requests to Greenhouse."""
    on_behalf_of: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('On-Behalf-Of') }})
    r"""ID of the the user that will show up as having performed the action in Greenhouse. We already pass a value by default, but you can use this to override it."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Greenhouse:
    r"""Fields specific to Greenhouse."""
    post_headers: Optional[PostHeaders] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('post_headers'), 'exclude': lambda f: f is None }})
    r"""Headers we will pass with `POST` requests to Greenhouse."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RemoteFields:
    r"""Additional fields that we will pass through to specific ATS systems."""
    greenhouse: Optional[Greenhouse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('greenhouse'), 'exclude': lambda f: f is None }})
    r"""Fields specific to Greenhouse."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Tag:
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the tag you would like to remove."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeleteAtsCandidatesCandidateIDTagsRequestBody:
    r"""DELETE /ats/candidates/:candidate_id/tags request body"""
    tag: Tag = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})
    remote_fields: Optional[RemoteFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remote_fields'), 'exclude': lambda f: f is None }})
    r"""Additional fields that we will pass through to specific ATS systems."""
    



@dataclasses.dataclass
class DeleteAtsCandidatesCandidateIDTagsRequest:
    x_integration_id: str = dataclasses.field(metadata={'header': { 'field_name': 'X-Integration-Id', 'style': 'simple', 'explode': False }})
    r"""ID of the integration you want to interact with."""
    candidate_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'candidate_id', 'style': 'simple', 'explode': False }})
    r"""Kombo ID of the candidate you want to remove the tag from."""
    request_body: Optional[DeleteAtsCandidatesCandidateIDTagsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""DELETE /ats/candidates/:candidate_id/tags request body"""
    



@dataclasses.dataclass
class DeleteAtsCandidatesCandidateIDTagsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    delete_ats_candidates_candidate_id_tags_successful_response: Optional[shared_deleteatscandidatescandidateidtagssuccessfulresponse.DeleteAtsCandidatesCandidateIDTagsSuccessfulResponse] = dataclasses.field(default=None)
    r"""DELETE /ats/candidates/:candidate_id/tags Successful response"""
    

