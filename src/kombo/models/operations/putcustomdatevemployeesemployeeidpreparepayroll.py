"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from ...models.shared import putcustomdatevemployeesemployeeidpreparepayrollsuccessfulresponse as shared_putcustomdatevemployeesemployeeidpreparepayrollsuccessfulresponse
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from kombo import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FixedPayments:
    amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    lohnart: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lohnart') }})
    r"""The \\"Lohnart\\" (payment-type) in DATEV. Make sure a Lohnart is selected that actually supports fixed payments (no hourly modifier)."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HourlyPayments:
    hours: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours') }})
    r"""Number of hours this employee has worked."""
    lohnart: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lohnart') }})
    r"""The \\"Lohnart\\" (payment-type) in DATEV. Make sure a Lohnart is selected that actually supports hours."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayrollRun:
    date_: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""YYYY-MM-DDTHH:mm:ss.sssZ
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
    """
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutCustomDatevEmployeesEmployeeIDPreparePayrollRequestBody:
    r"""PUT /custom/datev/employees/:employee_id/prepare-payroll request body"""
    fixed_payments: List[FixedPayments] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixed_payments') }})
    r"""Add entries for all the fixed supplements here. For example you can write \\"Bonuses\\" (in Euros here). Unfortunately, DATEV doens't allow showing a lable for the entries."""
    hourly_payments: List[HourlyPayments] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hourly_payments') }})
    r"""Add entries for all the hourly calculated supplements here. For example you can write \\"Overtime\\" or \\"Work on Holidays\\" (in hours here). Unfortunately, DATEV doens't allow showing a lable for the entries."""
    payroll_run: PayrollRun = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payroll_run') }})
    



@dataclasses.dataclass
class PutCustomDatevEmployeesEmployeeIDPreparePayrollRequest:
    employee_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'employee_id', 'style': 'simple', 'explode': False }})
    r"""ID of the employee that should be updated. You can use their Kombo `id` or their ID in the remote system by prefixing it with `remote:` (e.g., `remote:12312`)"""
    x_integration_id: str = dataclasses.field(metadata={'header': { 'field_name': 'X-Integration-Id', 'style': 'simple', 'explode': False }})
    r"""ID of the integration you want to interact with."""
    request_body: Optional[PutCustomDatevEmployeesEmployeeIDPreparePayrollRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""PUT /custom/datev/employees/:employee_id/prepare-payroll request body"""
    



@dataclasses.dataclass
class PutCustomDatevEmployeesEmployeeIDPreparePayrollResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    put_custom_datev_employees_employee_id_prepare_payroll_successful_response: Optional[shared_putcustomdatevemployeesemployeeidpreparepayrollsuccessfulresponse.PutCustomDatevEmployeesEmployeeIDPreparePayrollSuccessfulResponse] = dataclasses.field(default=None)
    r"""PUT /custom/datev/employees/:employee_id/prepare-payroll Successful response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

