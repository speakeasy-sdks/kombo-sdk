"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getatsjobserrorresponse as shared_getatsjobserrorresponse
from ..shared import getatsjobsparameterincludedeleted as shared_getatsjobsparameterincludedeleted
from ..shared import getatsjobsparameterstatus as shared_getatsjobsparameterstatus
from ..shared import getatsjobssuccessfulresponse as shared_getatsjobssuccessfulresponse
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from speakeasybar import utils
from typing import Optional



@dataclasses.dataclass
class GetAtsJobsRequest:
    x_integration_id: str = dataclasses.field(metadata={'header': { 'field_name': 'X-Integration-Id', 'style': 'simple', 'explode': False }})
    r"""ID of the integration you want to interact with."""
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""An optional cursor string used for pagination. This can be retrieved from the `next` property of the previous page response."""
    ids: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ids', 'style': 'form', 'explode': True }})
    r"""Filter by a comma-separated list of IDs such as `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`."""
    include_deleted: Optional[shared_getatsjobsparameterincludedeleted.GetAtsJobsParameterIncludeDeleted] = dataclasses.field(default=shared_getatsjobsparameterincludedeleted.GetAtsJobsParameterIncludeDeleted.FALSE, metadata={'query_param': { 'field_name': 'include_deleted', 'style': 'form', 'explode': True }})
    r"""By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too."""
    job_codes: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'job_codes', 'style': 'form', 'explode': True }})
    r"""Filter by a comma-separated list of job codes."""
    name_contains: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name_contains', 'style': 'form', 'explode': True }})
    r"""Filter by the `name` field. Can be used to find a job by keywords present in the job name."""
    page_size: Optional[int] = dataclasses.field(default=100, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of results to return per page."""
    post_url: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'post_url', 'style': 'form', 'explode': True }})
    r"""Filter by the `post_url` field. Can be used to find a job based on its public posting URL."""
    remote_ids: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'remote_ids', 'style': 'form', 'explode': True }})
    r"""Filter by a comma-separated list of remote IDs."""
    status: Optional[shared_getatsjobsparameterstatus.GetAtsJobsParameterStatus] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""**(⚠️ Deprecated)** Filter by the `status` field. Can be used to find a job based on its status."""
    statuses: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'statuses', 'style': 'form', 'explode': True }})
    r"""Filter by a comma-separated list of `OPEN`, `CLOSED`, `DRAFT`, `ARCHIVED`"""
    updated_after: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'updated_after', 'style': 'form', 'explode': True }})
    r"""Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs503ApplicationJSONError:
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    


class GetAtsJobs503ApplicationJSONStatus(str, Enum):
    ERROR = 'error'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs503ApplicationJSON:
    r"""Returned when no sync has finished successfully yet"""
    error: GetAtsJobs503ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})
    status: GetAtsJobs503ApplicationJSONStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs404ApplicationJSONError:
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    


class GetAtsJobs404ApplicationJSONStatus(str, Enum):
    ERROR = 'error'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs404ApplicationJSON:
    r"""Returned when a requested resource is not found."""
    error: GetAtsJobs404ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})
    status: GetAtsJobs404ApplicationJSONStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs403ApplicationJSONError:
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    


class GetAtsJobs403ApplicationJSONStatus(str, Enum):
    ERROR = 'error'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs403ApplicationJSON:
    r"""Returned when the passed integration is inactive."""
    error: GetAtsJobs403ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})
    status: GetAtsJobs403ApplicationJSONStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs401ApplicationJSONError:
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    


class GetAtsJobs401ApplicationJSONStatus(str, Enum):
    ERROR = 'error'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetAtsJobs401ApplicationJSON:
    r"""Returned when the authentication header was invalid or missing."""
    error: GetAtsJobs401ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})
    status: GetAtsJobs401ApplicationJSONStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    




@dataclasses.dataclass
class GetAtsJobsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    get_ats_jobs_401_application_json_object: Optional[GetAtsJobs401ApplicationJSON] = dataclasses.field(default=None)
    r"""Returned when the authentication header was invalid or missing."""
    get_ats_jobs_403_application_json_object: Optional[GetAtsJobs403ApplicationJSON] = dataclasses.field(default=None)
    r"""Returned when the passed integration is inactive."""
    get_ats_jobs_404_application_json_object: Optional[GetAtsJobs404ApplicationJSON] = dataclasses.field(default=None)
    r"""Returned when a requested resource is not found."""
    get_ats_jobs_503_application_json_object: Optional[GetAtsJobs503ApplicationJSON] = dataclasses.field(default=None)
    r"""Returned when no sync has finished successfully yet"""
    get_ats_jobs_error_response: Optional[shared_getatsjobserrorresponse.GetAtsJobsErrorResponse] = dataclasses.field(default=None)
    r"""GET /ats/jobs Error response"""
    get_ats_jobs_successful_response: Optional[shared_getatsjobssuccessfulresponse.GetAtsJobsSuccessfulResponse] = dataclasses.field(default=None)
    r"""GET /ats/jobs Successful response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

